# [searchbnf.conf](http://docs.splunk.com/Documentation/Splunk/latest/Admin/Searchbnfconf)

[listprivateobjects-command]
syntax = LISTPRIVATEOBJECTS APPNAME=<string> OBJTYPE=<string> OBJOWNER=<string>
shortdesc = Provided with an app name, and object type lists all private objects within the app. Can narrow down to an individual owner  
description = \
    Provided with an app names, and object type this will list the private objects of the said type. Currently only views are supported \
    An additional parameter of OBJOWNER can be passed in to narrow down to an individual user\
    Note that this command is only accessible to those with write access to the app in question
comment1 = \
    This example lists all private views within the app example app 
example1 = | listprivateobjects appname=exampleapp objtype=views
category = generating
usage = public

[shareprivateobject-command]
syntax = SHAREPRIVATEOBJECT APPNAME=<string> OBJTYPE=<string> OBJOWNER=<string> OBJNAME=<string> CLONE=<optional> REOWN=<optional> OVERWRITE=<optional>
shortdesc = Provided with an app names, object type, object owner and object name changes a private object to app level sharing
description = \
    Provided with an app names, object type, object owner and object name changes a private object to app level sharingProvided with an app names, object type, object owner and object name changes a private object to app level sharing. Currently only views are supported \
    The optional clone option clones rather than moves the object from private to app level sharing, the reown option changes the ownership to the app admin at application level sharing\
    Note that this command is only accessible to those with write access to the app in question
comment1 = \
    This example shares an object with name "testdash" with owner "testuser"
example1 = | shareprivateobject appname=exampleapp objtype=views objowner=testuser objname=testdash
comment2 = \
    This example example shares an object with name "testdash" with owner "testuser" by cloning it into app context and re-owning it to the app admin running the command
example2 = | shareprivateobject appname=exampleapp objtype=views objowner=testuser objname=testdash clone=true reown=true
category = generating
usage = public

